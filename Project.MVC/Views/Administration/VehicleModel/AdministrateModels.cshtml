@{
    ViewData["Title"] = "Models administration";
}
@using Project.MVC.Models.Administration.VehicleModel;
@model AdministrateModelsViewModel

<div class="card text-center">
    <div class="card-header">
        <partial name="_Navigation" model="Model.ModelsAdministrationNavigation" />
    </div>
    <div class="card-body">
        <p>
            <a asp-action="CreateModel" class="btn btn-primary  btn-lg btn-block">
                <i class='fas fa-plus'></i>
                New model
            </a>
        </p>
        @(Html
                .Grid(Model.TableData)
                .Build(columns =>
                {
                    columns.Add().RenderedAs((model, row) => row + 1).Titled("#").Css("text-center");
                    columns.Add(model => model.ModelName).Titled("Make name");
                    columns.Add(model => model.MakeAbrv).Titled("Make abrv");
                    columns.Add(model => model.ModelName).Titled("Model name");
                    columns.Add(model => model.ModelAbrv).Titled("Model abrv");
                    columns.Add(model =>
                       $"<div>" +
                       $"<a href= \"/administration/models/{model.ModelId}\"" +
                           $"style ='margin: 2px' class='btn btn-secondary' data-id=\"{model.ModelId}\"><i class='fas fa-info-circle'></i></button>" +
                       $"<a href= \"/administration/models/edit/{model.ModelId}\"" +
                           $"style ='margin: 2px' class='btn btn-secondary' data-id=\"{model.ModelId}\"><i class='fas fa-edit'></i></a>" +
                       $"<a href= \"/administration/models/delete/{model.ModelId}\"" +
                           $"style ='margin: 2px' class='btn btn-danger' data-id=\"{model.ModelId}\"><i class='fas fa-trash'></i></button>" +
                       $"<div>"
                   ).Encoded(false).Titled("CRUD options").Css("actions-column");

                })
                .Using(GridFilterMode.Header)
                .Empty("No data found")
                .Filterable()
                .Sortable()
                .Pageable(pager =>
                {
                    pager.PageSizes = new Dictionary<Int32, String> { { 4, "4" }, { 8, "8" }, { 16, "16" }, { 0, "All" } };
                    pager.ShowPageSizes = true;
                })
            )


    </div>
</div>